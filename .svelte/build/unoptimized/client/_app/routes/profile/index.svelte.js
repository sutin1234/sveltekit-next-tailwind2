/* src/routes/profile/index.svelte generated by Svelte v3.32.1 */
import {
	SvelteComponent,
	append,
	children,
	claim_element,
	claim_text,
	detach,
	element,
	init,
	insert,
	noop,
	safe_not_equal,
	set_data,
	text
} from "../../../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let h1;
	let t0;
	let t1;

	return {
		c() {
			h1 = element("h1");
			t0 = text("Profile ");
			t1 = text(/*slug*/ ctx[0]);
		},
		l(nodes) {
			h1 = claim_element(nodes, "H1", {});
			var h1_nodes = children(h1);
			t0 = claim_text(h1_nodes, "Profile ");
			t1 = claim_text(h1_nodes, /*slug*/ ctx[0]);
			h1_nodes.forEach(detach);
		},
		m(target, anchor) {
			insert(target, h1, anchor);
			append(h1, t0);
			append(h1, t1);
		},
		p(ctx, [dirty]) {
			if (dirty & /*slug*/ 1) set_data(t1, /*slug*/ ctx[0]);
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(h1);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { slug = "" } = $$props;

	$$self.$$set = $$props => {
		if ("slug" in $$props) $$invalidate(0, slug = $$props.slug);
	};

	return [slug];
}

class Profile extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { slug: 0 });
	}
}

export default Profile;
//# sourceMappingURL=index.svelte.js.map
