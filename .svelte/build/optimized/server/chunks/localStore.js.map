{"version":3,"file":"localStore.js","sources":["../../../unoptimized/server/_snowpack/pkg/svelte/store.js","../../../unoptimized/server/_app/routes/localStore.js"],"sourcesContent":["import { n as noop, d as safe_not_equal } from '../common/index-fe69e315.js';\n\nconst subscriber_queue = [];\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\n\nexport { writable };\n//# sourceMappingURL=store.js.map\n","import {writable} from \"../../_snowpack/pkg/svelte/store.js\";\nexport function localStore(key, value) {\n  const data = typeof localStorage != \"undefined\" ? localStorage.getItem(key) : null;\n  const store = writable(value);\n  if (data !== null) {\n    store.set(data);\n  }\n  store.subscribe((val) => {\n    if (typeof localStorage == \"undefined\") {\n      return;\n    }\n    localStorage.setItem(key, val);\n  });\n  return store;\n}\n//# sourceMappingURL=localStore.js.map\n"],"names":["subscriber_queue","key","value","data","localStorage","getItem","store","start","noop","stop","subscribers","set","new_value","safe_not_equal","run_queue","length","i","s","push","update","fn","subscribe","run","invalidate","subscriber","index","indexOf","splice","writable","val","setItem"],"mappings":"8EAEA,MAAMA,EAAmB,sBCDlB,SAAoBC,EAAKC,GAC9B,MAAMC,EAA8B,oBAAhBC,aAA8BA,aAAaC,QAAQJ,GAAO,KACxEK,EDKR,SAAkBJ,EAAOK,EAAQC,QAC7B,IAAIC,EACJ,MAAMC,EAAc,GACpB,SAASC,EAAIC,GACT,GAAIC,iBAAeX,EAAOU,KACtBV,EAAQU,EACJH,GAAM,CACN,MAAMK,GAAad,EAAiBe,OACpC,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAYK,OAAQC,GAAK,EAAG,CAC5C,MAAMC,EAAIP,EAAYM,GACtBC,EAAE,KACFjB,EAAiBkB,KAAKD,EAAGf,GAE7B,GAAIY,EAAW,CACX,IAAK,IAAIE,EAAI,EAAGA,EAAIhB,EAAiBe,OAAQC,GAAK,EAC9ChB,EAAiBgB,GAAG,GAAGhB,EAAiBgB,EAAI,IAEhDhB,EAAiBe,OAAS,IA0B1C,MAAO,CAAEJ,IAAAA,EAAKQ,OArBd,SAAgBC,GACZT,EAAIS,EAAGlB,KAoBWmB,UAlBtB,SAAmBC,EAAKC,EAAaf,QACjC,MAAMgB,EAAa,CAACF,EAAKC,GAMzB,OALAb,EAAYQ,KAAKM,GACU,IAAvBd,EAAYK,SACZN,EAAOF,EAAMI,IAAQH,QAEzBc,EAAIpB,GACG,KACH,MAAMuB,EAAQf,EAAYgB,QAAQF,IACnB,IAAXC,GACAf,EAAYiB,OAAOF,EAAO,GAEH,IAAvBf,EAAYK,SACZN,IACAA,EAAO,SC5CPmB,CAAS1B,GAUvB,OATa,OAATC,GACFG,EAAMK,IAAIR,GAEZG,EAAMe,WAAWQ,IACY,oBAAhBzB,cAGXA,aAAa0B,QAAQ7B,EAAK4B,MAErBvB"}